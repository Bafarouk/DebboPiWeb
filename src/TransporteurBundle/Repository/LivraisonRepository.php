<?php

namespace TransporteurBundle\Repository;

/**
 * LivraisonRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class LivraisonRepository extends \Doctrine\ORM\EntityRepository
{

    public function getLivraisonByUserNotD($id)
    {
        $qb=$this->getEntityManager()
            ->createQuery("select l.idLivraison , l.dateLivraison , l.adresseLivraison , l.etatLivraison , c.idCommande , u.tel from TransporteurBundle:livraison l JOIN l.fkCommande c JOIN c.idClient u where l.etatLivraison=?1 and l.fkUser=?2 ")
            ->setParameters(array(1=>'non livrée',2=>$id));
        return $query = $qb->getResult();
    }


    public function getLivraisonByUserD($id)
    {
        $qb=$this->getEntityManager()
            ->createQuery("select l.idLivraison , l.dateLivraison , l.adresseLivraison , l.etatLivraison , c.idCommande , u.tel from TransporteurBundle:livraison l JOIN l.fkCommande c JOIN c.idClient u where l.etatLivraison=?1 and l.fkUser=?2 ")
            ->setParameters(array(1=>'livrée',2=>$id));
        return $query = $qb->getResult();
    }

    public function updateLivStat($id)
    {
        $qb=$this->getEntityManager()
            ->createQuery("Update TransporteurBundle:livraison l SET l.etatLivraison=?1 where l.idLivraison=?2")
            ->setParameters(array(1=>'livrée',2=>$id));
        return $query=$qb->getResult();
    }

    public function getNbrLivraison($id)
    {
        $qb=$this->getEntityManager()
            ->createQuery(" select COUNT(l.etatLivraison) NBR from TransporteurBundle:livraison l where l.etatLivraison=?1 and l.fkUser=?2 ")
            ->setParameters(array(1=>'non livrée',2=>$id));
        return $query = $qb->getResult();

    }


    public function getNbrLivraisonNonAff()
    {
        $qb=$this->getEntityManager()
            ->createQuery(" select COUNT(l.idLivraison ) NBR from TransporteurBundle:livraison l where l.acceptation=?1")
        ->setParameters(array(1=>"non acceptée"));
        return $query = $qb->getResult();

    }

    public function getLivraisonNonAff()
    {
        $qb=$this->getEntityManager()
            ->createQuery(" select l.idLivraison , l.dateLivraison , l.adresseLivraison , l.etatLivraison , c.idCommande , u.tel from TransporteurBundle:livraison l JOIN l.fkCommande c JOIN c.idClient u where l.acceptation=?1")
            ->setParameters(array(1=>"non acceptée"));
        return $query = $qb->getResult();

    }

    public function getTransporteur($adresse,$date)
    {
        $qb=$this->getEntityManager()
            ->createQuery("select u.nom , u.prenom from TransporteurBundle:livraison l JOIN l.fkUser u where l.adresseLivraison=?1 and l.dateLivraison=?2")
            ->setParameters(array(1=>$adresse,2=>$date));
        return $query = $qb->getResult();

    }







}
